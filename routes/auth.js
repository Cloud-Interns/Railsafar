const express = require("express");
const router = express.Router();
const config = require("config");
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");
const User = require("../models/User");

//@route POST api/user
//@desc Authenticate User
//@access Public
router.post("/login", async (req, res) => {
  // destructuring the request body content
  const { email, password } = req.body;

  try {
    let user = await User.findOne({ email });

    //if user with given email doesn't found
    if (!user) {
      return res.json({ status: "error" });
    }
    //comparing the entered password and password in database
    const isMatch = await bcrypt.compare(password, user.password);

    if (!isMatch) {
      return res.json({ status: "error" });
    }
    //else if credentials are matched then just return a token
    //creating a payload which is just a piece of info about user here its ID(virtual) generated by mongoose
    const payload = {
      user: user.id
    };

    const secret = config.get("jwtSecret");

    //signing JWT with payload, secret(anything in String), options(like token expire time in seconds etc...) and callback
    jwt.sign(
      payload,
      secret,
      {
        expiresIn: 3600000
      },
      (err, token) => {
        if (err) throw err;
        else {
          return res.status(200).json({ token: token });
        }
      }
    );
  } catch (err) {
    return res.status(500).json({ status: "error" });
  }
});

//@route GET api/user
//@desc Get loggedin user
//@access Private
router.get("", [], (req, res) => {});

module.exports = router;
