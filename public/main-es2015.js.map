{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/layouts/dashboard/dashboard.component.html","./src/app/components/layouts/dashboard/dashboard.component.ts","./src/app/components/layouts/navbar/navbar.component.html","./src/app/components/layouts/navbar/navbar.component.ts","./src/app/components/pages/about/about.component.html","./src/app/components/pages/about/about.component.ts","./src/app/components/pages/bookticket/bookticket.component.html","./src/app/components/pages/bookticket/bookticket.component.ts","./src/app/components/pages/contactus/contactus.component.html","./src/app/components/pages/contactus/contactus.component.ts","./src/app/components/pages/error/error.component.html","./src/app/components/pages/error/error.component.ts","./src/app/components/pages/forgotpassword/forgotpassword.component.html","./src/app/components/pages/forgotpassword/forgotpassword.component.ts","./src/app/components/pages/live-status/live-status.component.html","./src/app/components/pages/live-status/live-status.component.ts","./src/app/components/pages/login/login.component.html","./src/app/components/pages/login/login.component.ts","./src/app/components/pages/pnr/pnr.component.html","./src/app/components/pages/pnr/pnr.component.ts","./src/app/components/pages/profile/profile.component.html","./src/app/components/pages/profile/profile.component.ts","./src/app/components/pages/resetpassword/resetpassword.component.html","./src/app/components/pages/resetpassword/resetpassword.component.ts","./src/app/components/pages/search/search.component.html","./src/app/components/pages/search/search.component.ts","./src/app/components/pages/seat-avl/seat-avl.component.html","./src/app/components/pages/seat-avl/seat-avl.component.ts","./src/app/components/pages/showtickets/showtickets.component.html","./src/app/components/pages/showtickets/showtickets.component.ts","./src/app/components/pages/signup/signup.component.html","./src/app/components/pages/signup/signup.component.ts","./src/app/components/pages/train-schedule/train-schedule.component.html","./src/app/components/pages/train-schedule/train-schedule.component.ts","./src/app/components/pages/updatepassword/updatepassword.component.html","./src/app/components/pages/updatepassword/updatepassword.component.ts","./src/app/components/pages/welcome/welcome.component.html","./src/app/components/pages/welcome/welcome.component.ts","./src/app/components/shared/confirmPassword-validator.ts","./src/app/directives/sh-password.directive.ts","./src/app/models/user.model.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/ticket.service.ts","./src/app/services/token.interceptor.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","//Imports from Angular Framework\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//Components Imports\nimport { WelcomeComponent } from './components/pages/welcome/welcome.component';\nimport { ContactusComponent } from './components/pages/contactus/contactus.component';\nimport { AboutComponent } from './components/pages/about/about.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { SignupComponent } from './components/pages/signup/signup.component';\nimport { ForgotpasswordComponent } from './components/pages/forgotpassword/forgotpassword.component';\nimport { ResetpasswordComponent } from './components/pages/resetpassword/resetpassword.component';\nimport { DashboardComponent } from './components/layouts/dashboard/dashboard.component';\nimport { ErrorComponent } from './components/pages/error/error.component';\nimport { SearchComponent } from './components/pages/search/search.component';\nimport { LiveStatusComponent } from './components/pages/live-status/live-status.component';\nimport { BookticketComponent } from './components/pages/bookticket/bookticket.component';\nimport { ShowticketsComponent } from './components/pages/showtickets/showtickets.component';\nimport { PnrComponent } from './components/pages/pnr/pnr.component';\nimport { ProfileComponent } from './components/pages/profile/profile.component';\nimport { TrainScheduleComponent } from './components/pages/train-schedule/train-schedule.component';\nimport { SeatAvlComponent } from './components/pages/seat-avl/seat-avl.component';\nimport { UpdatepasswordComponent } from './components/pages/updatepassword/updatepassword.component';\n//Services Imports\nimport {\n  AuthGuardService as AuthGuard\n} from './services/auth-guard.service';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n  { path: 'welcome', component: WelcomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: SignupComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'contact-us', component: ContactusComponent },\n  { path: 'forgotpassword', component: ForgotpasswordComponent },\n  { path: 'updatepassword', component: UpdatepasswordComponent },\n  { path: 'resetpassword/:token', component: ResetpasswordComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'show-tickets', component: ShowticketsComponent, canActivate: [AuthGuard] },\n  { path: 'book', component: BookticketComponent, canActivate: [AuthGuard] },\n  { path: 'search', component: SearchComponent, canActivate: [AuthGuard] },\n  { path: 'livestatus', component: LiveStatusComponent, canActivate: [AuthGuard] },\n  { path: 'check-pnr', component: PnrComponent, canActivate: [AuthGuard] },\n  { path: 'get-schedule', component: TrainScheduleComponent, canActivate: [AuthGuard] },\n  { path: 'avl-seat', component: SeatAvlComponent, canActivate: [AuthGuard] },\n  { path: '**', component: ErrorComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-navbar></app-navbar>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <router-outlet></router-outlet>\n        </div>       \n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n  \n}\n","//Imports from Angular Framework\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n//Third party imports\nimport { ToastrModule } from 'ngx-toastr';\nimport { JwtModule } from \"@auth0/angular-jwt\"\n\n//App Routing File\nimport { AppRoutingModule } from './app-routing.module';\n\n//Components Imports\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/layouts/navbar/navbar.component';\nimport { WelcomeComponent } from './components/pages/welcome/welcome.component';\nimport { AboutComponent } from './components/pages/about/about.component';\nimport { ContactusComponent } from './components/pages/contactus/contactus.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { SignupComponent } from './components/pages/signup/signup.component';\nimport { ResetpasswordComponent } from './components/pages/resetpassword/resetpassword.component';\nimport { ForgotpasswordComponent } from './components/pages/forgotpassword/forgotpassword.component';\nimport { DashboardComponent } from './components/layouts/dashboard/dashboard.component';\nimport { ErrorComponent } from './components/pages/error/error.component';\nimport { SearchComponent } from './components/pages/search/search.component';\nimport { LiveStatusComponent } from './components/pages/live-status/live-status.component';\nimport { BookticketComponent } from './components/pages/bookticket/bookticket.component';\nimport { ShowticketsComponent } from './components/pages/showtickets/showtickets.component';\nimport { PnrComponent } from './components/pages/pnr/pnr.component';\nimport { ProfileComponent } from './components/pages//profile/profile.component';\nimport { TrainScheduleComponent } from './components/pages/train-schedule/train-schedule.component';\nimport { SeatAvlComponent } from './components/pages/seat-avl/seat-avl.component';\nimport { UpdatepasswordComponent } from './components/pages/updatepassword/updatepassword.component';\n\n//Services Imports\nimport { UserService } from './services/user.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthService } from './services/auth.service';\nimport { TicketService } from './services/ticket.service';\nimport { TokenInterceptor } from './services/token.interceptor';\n\n\n//Custom Directives Imports./components/pages/profile/profile.component\nimport { ShPasswordDirective } from './directives/sh-password.directive';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    WelcomeComponent,\n    AboutComponent,\n    ContactusComponent,\n    LoginComponent,\n    SignupComponent,\n    ResetpasswordComponent,\n    ShPasswordDirective,\n    ForgotpasswordComponent,\n    DashboardComponent,\n    ErrorComponent,\n    SearchComponent,\n    LiveStatusComponent,\n    BookticketComponent,\n    ShowticketsComponent,\n    PnrComponent,\n    ProfileComponent,\n    TrainScheduleComponent,\n    SeatAvlComponent,\n    UpdatepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(),\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: getToken,\n        whitelistedDomains: ['127.0.0.1:8000']\n        //blacklistedRoutes: [\"example.com/examplebadroute/\"]\n      }\n    })\n  ],\n  providers: [TicketService, UserService, AuthGuardService, AuthService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\nexport function getToken() {\n  return localStorage.getItem('currentUser');\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2 offset-sm-10\">\n    <div class=\"dropdown\">\n      <button\n        class=\"btn btn-primary dropdown-toggle\"\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        Welcome\n      </button>\n      <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <a class=\"dropdown-item\" routerLink=\"/profile\">Profile</a>\n        <button class=\"dropdown-item\" routerLink=\"/show-tickets\">\n          Booked Tickets\n        </button>\n        <button class=\"dropdown-item\" (click)=\"onLogout()\">Logout</button>\n      </div>\n    </div>\n  </div>\n</div>\n<br />\n<div class=\"row\">\n  <div class=\"col-sm-6\">\n    <div class=\"card h-100\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Train Search</h5>\n        <p class=\"card-text\">\n          Search all the trains between stations.\n        </p>\n        <a routerLink=\"/search\" class=\"btn btn-success btn-block\">Search</a>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-6\">\n    <div class=\"card h-100\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Book Ticket</h5>\n        <p class=\"card-text\">\n          Book tickets and plan your journey.\n        </p>\n        <a routerLink=\"/book\" class=\"btn btn-success btn-block\">Book</a>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-sm-6\">\n    <div class=\"card h-100\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Get Availability</h5>\n        <p class=\"card-text\">\n          Get the seat availability for different classes.\n        </p>\n        <a class=\"btn btn-success btn-block\" routerLink=\"/avl-seat\">Check Availability</a>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-6\">\n    <div class=\"card h-100\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Get Schedule</h5>\n        <p class=\"card-text\">\n          Get the time wise schedule for specific train.\n        </p>\n        <a class=\"btn btn-success btn-block\" routerLink=\"/get-schedule\">Show Schedule</a>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-sm-6\">\n    <div class=\"card h-100\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Live Status</h5>\n        <p class=\"card-text\">\n          Get live status of trains.\n        </p>\n        <a class=\"btn btn-success btn-block\" routerLink=\"/livestatus\"\n          >Live Status</a\n        >\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-6\">\n    <div class=\"card h-100\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">PNR Details</h5>\n        <p class=\"card-text\">\n          Get your booking details with PNR number.\n        </p>\n        <a class=\"btn btn-success btn-block\" routerLink=\"/check-pnr\"\n          >Get Details using PNR</a\n        >\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private toastr: ToastrService) { }\n\n  //Toast Methods\n  showError() {   // FOR Errors \n    this.toastr.error('OOPS!!', 'Something went wrong...', {\n      timeOut: 3000\n    });\n  }\n\n\n  ngOnInit() {\n\n  }\n\n  onLogout() {\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['/welcome']);\n\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg fixed-top navbar-dark\" id=\"navbar\">\n  <div class=\"container-fluid\">\n    <a style=\"cursor: pointer;\" class=\"navbar-brand\" routerLink=\"/welcome\"\n      >Railsafar&nbsp;<img\n        src=\"../../assets/images/metro.svg\"\n        style=\"height: 40px;\"\n    /></a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/welcome\" routerLinkActive=\"active\"\n            >Home</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/about\" routerLinkActive=\"active\"\n            >About</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/contact-us\" routerLinkActive=\"active\"\n            >Contact</a\n          >\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n        <div class=\"jumbotron\">\n            <h1 class=\"display-4\">About Us</h1>\n            <p class=\"lead\">It is a simple application to plan your train journeys :)</p>\n            <hr class=\"my-4\">\n            <p>Made with <i class=\"fa fa-heart\"></i> &amp; Angular </p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/booking.svg\"\n      alt=\"Booking\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -15%; left: 42%;\"\n    />\n    <h3 style=\"text-align: center; letter-spacing: 0.1cm;\">Book Ticket</h3>\n    <form [formGroup]=\"bookingForm\" (ngSubmit)=\"onSubmit()\" id=\"booking\">\n      <div class=\"form-group form-row\">\n        <div class=\"input-group col\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-subway fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"sourceName\"\n            placeholder=\"From\"\n            id=\"sourceName\"\n            formControlName=\"sourceName\"\n            name=\"sourceName\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"input-group col\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-subway fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"destinationName\"\n            placeholder=\"To\"\n            id=\"destinationName\"\n            formControlName=\"destinationName\"\n            name=\"destinationName\"\n            class=\"form-control\"\n          />\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"input-group date\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-calendar fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"date\"\n            id=\"doj\"\n            formControlName=\"doj\"\n            name=\"doj\"\n            value=\"12-02-2000\"\n            class=\"form-control\"\n            min=\"{{ minDate }}\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-train fa-fw\"></i>\n            </div>\n          </div>\n          <select\n            type=\"text\"\n            id=\"train\"\n            formControlName=\"train\"\n            name=\"train\"\n            class=\"form-control\"\n          >\n            <option>12934 Karnavati SF Exp</option>\n            <option>12932 Double Decker SF Exp</option>\n            <option>12933 Tejas SF Exp</option>\n            <option>12935 Howrah SF Exp</option>\n            <option>12936 Gujarat Decker SF Exp</option>\n            <option>12937 Link SF Exp</option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-bed fa-fw\"></i>\n            </div>\n          </div>\n          <select\n            type=\"text\"\n            id=\"className\"\n            formControlName=\"className\"\n            name=\"className\"\n            class=\"form-control\"\n          >\n            <option>Sleeper(SL)</option>\n            <option>AC Chair Car(CC)</option>\n            <option>AC Executive Chair Car(EC)</option>\n            <option>Two Tier AC(II AC)</option>\n            <option>Three Tier AC(III AC)</option>\n            <option>AC First Class(I AC)</option>\n          </select>\n        </div>\n      </div>\n      <div formArrayName=\"passenger\">\n        <div\n          class=\"form-group\"\n          *ngFor=\"\n            let passengerControl of bookingForm.get('passenger')['controls'];\n            let i = index\n          \"\n          [formGroupName]=\"i\"\n          style=\"margin-top: 10px;\"\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Name (as per Govt ID Proof)\"\n            class=\"form-control\"\n            formControlName=\"name\"\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Age\"\n            class=\"form-control\"\n            formControlName=\"age\"\n            min=\"1\"\n          />\n          <select type=\"text\" formControlName=\"gender\" class=\"form-control\">\n            <option>Male</option>\n            <option>Female</option>\n            <option>Others</option>\n          </select>\n          <select type=\"text\" formControlName=\"food\" class=\"form-control\">\n            <option>Veg</option>\n            <option>Non Veg</option>\n            <option>No Food</option>\n          </select>\n          &nbsp;&nbsp;\n          <div class=\"col-xs-2\">\n            <button\n              type=\"button\"\n              class=\"btn btn-danger\"\n              (click)=\"onDeletePassenger(i)\"\n            >\n              Remove Passenger\n            </button>\n          </div>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-primary btn-block\"\n        (click)=\"onAddPassenger()\"\n        [disabled]=\"!bookingForm.valid\"\n      >\n        Add Passenger\n      </button>\n      &nbsp;\n      <div class=\"form-group\">\n        <p>\n          <button\n            class=\"btn btn-primary btn-block\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#collapseExample\"\n            aria-expanded=\"false\"\n            aria-controls=\"collapseExample\"\n          >\n            Fare Details\n          </button>\n        </p>\n        <div class=\"collapse\" id=\"collapseExample\">\n          <div class=\"card card-body\">\n            Basic Fare ==> 500 INR/person <br />\n            <hr />\n            Reservation Charges ==> 250 INR/person<br />\n            <hr />\n            Catering Charges ==> 200 INR/person<br />\n            <hr />\n            Booking Charges ==> 50INR/person<br />\n            <hr />\n            Total Fare ==> 1000 INR/person<br />\n            <hr />\n            GST ==> 5% /person <br />\n            <hr />\n            Overall Fare ==> 1050 INR/person\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success form-control\"\n          [disabled]=\"!bookingForm.valid\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Book Ticket\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"button\" class=\"btn btn-light btn-md\" (click)=\"onClear()\">\n          Clear</button\n        >&nbsp;\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-md\"\n          (click)=\"onCancel()\"\n        >\n          Back\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { TicketService } from 'src/app/services/ticket.service';\n\n\n@Component({\n  selector: 'app-bookticket',\n  templateUrl: './bookticket.component.html',\n  styleUrls: ['./bookticket.component.css']\n})\nexport class BookticketComponent implements OnInit {\n\n  bookingForm: FormGroup;\n  loading: boolean = false;\n  isFilled: boolean = false;\n  todayDate: Date = new Date();\n  nextDate: Date = new Date(new Date(this.todayDate).setDate(this.todayDate.getDate() + 1));\n  minDate = this.nextDate.toISOString().split('T')[0];\n\n\n\n  constructor(\n    private router: Router,\n    private ticketService: TicketService,\n    private toastr: ToastrService) { }\n\n  //Toast Methods\n  showSuccess() {  //FOR Success\n    this.toastr.success('Booked Successfully!!', 'Please check your email inbox!', {\n      timeOut: 3000\n    });\n  }\n\n  showError() {   // FOR Errors \n    this.toastr.error('Sorry', 'Error occured in booking!', {\n      timeOut: 3000\n    });\n  }\n\n  showFatalError() {   // FOR Incomplete Form\n    this.toastr.error('OOPS!!', 'Please add passenger details!', {\n      timeOut: 5000\n    });\n  }\n\n  ngOnInit() {\n    let passengerDetails = new FormArray([]);\n\n    this.bookingForm = new FormGroup({\n      'sourceName': new FormControl(null, Validators.required),\n      'destinationName': new FormControl(null, Validators.required),\n      'doj': new FormControl(null, Validators.required),\n      'train': new FormControl(null, Validators.required),\n      'className': new FormControl(null, Validators.required),\n      'passenger': passengerDetails\n    })\n  }\n\n  //Submitting form\n  onSubmit() {\n    this.loading = true;\n    this.ticketService.bookTicket(this.bookingForm.value).subscribe(response => {\n      this.loading = false;\n      if (response.status === 'success') {\n        this.showSuccess();\n      } else if (response.status === 'fatal') {\n        this.showFatalError();\n      } else {\n        this.showError();\n      }\n    });\n    this.bookingForm.reset();\n  }\n\n  //Add passenger(form)\n  onAddPassenger() {\n    (<FormArray>this.bookingForm.get('passenger')).push(\n      new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'age': new FormControl(null,\n          [Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/)]),\n        'gender': new FormControl(null, Validators.required),\n        'food': new FormControl(null, Validators.required),\n      })\n    )\n  }\n\n  //Delete Passenger(form)\n  onDeletePassenger(index: number) {\n    (<FormArray>this.bookingForm.get('passenger')).removeAt(index);\n  }\n\n  //Clear  button\n  onClear() {\n    this.bookingForm.reset();\n  }\n\n  //Cancel Button\n  onCancel() {\n    this.router.navigate([\"/dashboard\"]);\n  }\n\n\n}\n","<div class=\"card-deck\">\n  <div class=\"card\">\n    <img class=\"card-img-top\" \n    src=\"../../assets/images/phone.svg\" \n    alt=\"Contact Numbers\" \n    style=\"width: 30vh;\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Customer Care Numbers</h5>\n      <p class=\"card-text\">0755-6610661, 0755-4090600</p>\n      <p class=\"card-text\">\n        <small class=\"text-muted\">Languages : English &amp; Hindi</small>\n      </p>\n    </div>\n  </div>\n  <div class=\"card\">\n    <img class=\"card-img-top\" \n    src=\"../../assets/images/links.svg\"\n    class=\"card-img\"\n    alt=\"General Information\"\n    style=\"width: 25vh;\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">General Information</h5>\n      <p class=\"card-text\">\n        I-tickets/e-tickets : care@irctc.co.in<br />\n        For Cancellation E-tickets : etickets@irctc.co.in\n      </p>\n      <p class=\"card-text\">\n        <small class=\"text-muted\"\n          >For other queries on your IRCTC SBI card account, kindly email\n          at loyaltyprogram@irctc.co.in</small>\n      </p>\n    </div>\n  </div>\n  <div class=\"card\">\n    <img class=\"card-img-top\" \n    src=\"../../assets/images/map.svg\"\n    class=\"card-img\"\n    alt=\"Registered Office\"\n    style=\"width: 25vh;\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Registered Office</h5>\n      <p class=\"card-text\">\n        Indian Railway Catering and Tourism Corporation Ltd.,<br />\n        B-148, 11th Floor, Statesman House,<br />\n        Barakhamba Road, New Delhi 110001\n      </p>\n      <p class=\"card-text\">\n        <small class=\"text-muted\"\n          >For IRCTC SBI Card users who do not receive the card within 01\n          month from the date of application kindly call on the Railway\n          SBI Card Helpline nos. at 0124-39021212 or 18001801295 (if\n          calling from BSNL/MTNL line) or send email to\n          feedback.gesbi@ge.com.</small>\n      </p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.css']\n})\nexport class ContactusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n    <h1 style=\"text-align: center;\">Sorry!! Page not found!</h1>\n    <img\n      src=\"../../../assets/images/error.png\"\n      alt=\"error 404\"\n      class=\"img-responsive\"\n      style=\"display: block; margin-left: auto; margin-right: auto; width: 50%;\"\n    />\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- Button trigger modal -->\n<!-- <div class=\"text-center\">\n  <button\n    type=\"button\"\n    class=\"btn btn-success\"\n    data-toggle=\"modal\"\n    data-target=\"#exampleModalCenter\"\n  >\n    Get an email to reset password\n  </button>\n</div>\n\n<!-- Modal -->\n<!-- <div\n  class=\"modal fade\"\n  id=\"exampleModalCenter\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n  aria-labelledby=\"exampleModalCenterTitle\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">\n          Enter your email ID\n        </h5>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          aria-label=\"Close\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form\n          [formGroup]=\"emailForm\"\n          (ngSubmit)=\"onSubmit()\"\n          id=\"forgotpassword\"\n        >\n          <div class=\"form-group\">\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\" id=\"btnGroupAddon\">\n                  <i class=\"fa fa-envelope fa-lg fa-fw\"></i>\n                </div>\n              </div>\n              <input\n                type=\"email\"\n                id=\"email\"\n                formControlName=\"email\"\n                name=\"email\"\n                class=\"form-control\"\n                aria-describedby=\"emailHelp\"\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary\"\n          data-dismiss=\"modal\"\n          (click)=\"onCancel()\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          (click)=\"onSubmit()\"\n          [disabled]=\"!emailForm.valid\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Send\n        </button>\n      </div>\n    </div>\n  </div> -->\n<!-- </div> -->\n\n<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/forgot.svg\"\n      alt=\"Forgot Password\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -18%; left: 42%;\"\n    /><br /><br />\n    <h3 style=\"text-align: center; letter-spacing: 0.03cm;\">\n      Forgot Password ?\n    </h3>\n    <form [formGroup]=\"forgotPwdForm\" (ngSubmit)=\"onSubmit()\" id=\"forgotPwd\">\n      <br />\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-envelope fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"email\"\n            id=\"email\"\n            formControlName=\"email\"\n            name=\"email\"\n            class=\"form-control\"\n            placeholder=\"Enter your registered email\"\n          />\n        </div>\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary form-control\"\n          [disabled]=\"!forgotPwdForm.valid\"\n          click=\"onSubmit()\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Send Email\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"button\" class=\"btn btn-light btn-md\" (click)=\"onClear()\">\n          Clear</button\n        >&nbsp;\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-md\"\n          (click)=\"onBack()\"\n        >\n          Back\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n\n  forgotPwdForm: FormGroup;\n  loading: boolean = false;\n  message: string = '';\n  displayAlert: Boolean = false;\n\n  private email: string;\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private toastr: ToastrService) { }\n\n\n  //Toast Methods\n  showSuccess() {  //FOR Success\n    this.toastr.success('Mail sent', 'Please check your inbox!', {\n      timeOut: 3000\n    });\n  }\n\n  showWarning() {  // FOR Warnings\n    this.toastr.warning('Warning', 'No such user exists!', {\n      timeOut: 3000\n    });\n  }\n\n  showError() {   // FOR Errors \n    this.toastr.error('Sorry', 'Error occured!!', {\n      timeOut: 3000\n    });\n  }\n\n\n  ngOnInit() {\n    this.forgotPwdForm = new FormGroup({\n      'email': new FormControl(this.email, [Validators.required, Validators.email])\n    })\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.email = this.forgotPwdForm.value.email;\n    this.userService.sendEmail(this.email).subscribe(response => {\n      this.loading = false;\n      if (response.status === 'success') {\n        this.showSuccess();\n      } else if (response.status === 'warning') {\n        this.showWarning();\n      } else {\n        this.showError();\n      }\n    });\n    this.forgotPwdForm.reset();\n  }\n\n  onBack() {\n    this.router.navigate(['../login'], { relativeTo: this.route });\n  }\n\n  onClear() {\n    this.forgotPwdForm.reset();\n  }\n}\n","<div class=\"row\">\n    <div\n      class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n    >\n      <img\n        src=\"../../assets/images/track.svg\"\n        alt=\"Login\"\n        class=\"img-responsive\"\n        style=\"width: 70px; position: absolute; top: -18%; left: 42%;\"\n      /><br /><br />\n      <h3 style=\"text-align: center; letter-spacing: 0.03cm;\">\n        Live Train Status\n      </h3>\n      <form [formGroup]=\"livestatusForm\" (ngSubmit)=\"onSubmit()\" id=\"livestatus\">\n        <br />\n        <div class=\"form-group\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text\" id=\"btnGroupAddon\">\n                <i class=\"fa fa-map-marker fa-lg fa-fw\" style=\"font-size: 28px;\"></i>\n              </div>\n            </div>\n            <select\n            type=\"number\"\n            id=\"trainNo\"\n            formControlName=\"trainNo\"\n            name=\"trainNo\"\n            class=\"form-control\"\n          >\n            <option>14311</option>\n            <option>12129</option>\n            <option>19034</option>\n            <option>22953</option>\n            <option>59163</option>\n          </select>\n          </div>\n        </div>\n        <br />\n        <div class=\"form-group\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary form-control\"\n            [disabled]=\"!livestatusForm.valid\"\n            click=\"onSubmit()\"\n          >\n            Track My Train\n          </button>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"button\" class=\"btn btn-light btn-md\" (click)=\"onClear()\">\n            Clear</button\n          >&nbsp;\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary btn-md\"\n            (click)=\"onBack()\"\n          >\n            Back\n          </button>\n        </div>\n      </form>\n      </div>\n    </div>\n    <div>\n      <hr *ngIf=\"this.liveStatus\" />\n      <div>\n        <div class=\"table-responsive\" *ngIf=\"this.FirstData\">\n          <span class=\"badge badge-pill badge-success\">{{\n            this.FirstData[\"number\"]\n          }}</span\n          >&nbsp;&nbsp;<span class=\"badge badge-pill badge-primary\">{{\n            this.FirstData[\"name\"]\n          }}</span>\n        </div>\n        <hr *ngIf=\"this.liveStatus\"><br/>\n     <div class=\"table-responsive\"  *ngIf= \"this.liveStatus\">\n         <table class=\"table table-striped\"> \n           <thead>\n             <tr *ngIf= \"this.liveStatus\">\n                 <th scope=\"col\">Stations</th>\n                 <th scope=\"col\">Arrival Time</th>\n                 <th scope=\"col\">Departure Time</th>\n                 <th scope=\"col\">Platform_No</th>\n             </tr>\n           </thead>\n           <tbody *ngFor=\"let data of this.liveStatus\">\n            <tr>\n              <td>{{data.station}}</td>\n              <td>{{data.arrivalTime}}</td>\n              <td>{{data.departureTime}}</td>\n              <td>{{data.platform}}</td>\n            </tr>\n           </tbody>\n           \n         </table>\n     </div>      \n   ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-live-status',\n  templateUrl: './live-status.component.html',\n  styleUrls: ['./live-status.component.css']\n})\nexport class LiveStatusComponent implements OnInit {\n\n  trainNo: string = '';\n  livestatusForm: FormGroup;\n  liveStatus: any;\n  Data: any;\n  FirstData: any;\n\n  constructor(\n    private router: Router) { }\n\n\n  ngOnInit(): void {\n    this.livestatusForm = new FormGroup({\n      'trainNo': new FormControl(null, [Validators.required]),\n    })\n  }\n  onSubmit() {\n    let x = (<HTMLInputElement>document.getElementById(\"trainNo\")).value;\n    this.Data = require('src/assets/JsonDataFiles/schedule.json');\n    this.liveStatus = this.Data.filter(d => d.number === x);\n    this.FirstData = this.liveStatus[0];\n  }\n\n  onClear() {\n    this.livestatusForm.reset();\n    this.liveStatus = null;\n    this.FirstData = null;\n  }\n\n  onBack() {\n    this.router.navigate(['/dashboard']);\n  }\n\n}\n\n\n\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/login.svg\"\n      alt=\"Login\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -18%; left: 42%;\"\n    />\n    <h3 style=\"text-align: center; letter-spacing: 0.1cm;\">Login</h3>\n    <br />\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" id=\"login\">\n      <!--<ngb-alert  *ngIf=\"!alertClosed\" (close)=\"alertClosed = true\">Password must contain a lowercase,uppercase,number & special character and must be atleast 8 characters long!</ngb-alert>-->\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-envelope fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"email\"\n            id=\"email\"\n            formControlName=\"email\"\n            name=\"email\"\n            class=\"form-control\"\n            aria-describedby=\"emailHelp\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"loginPassword\">Password</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-lock fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"password\"\n            id=\"loginPassword\"\n            formControlName=\"password\"\n            name=\"password\"\n            class=\"form-control\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary form-control\"\n          [disabled]=\"!loginForm.valid\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Login</button\n        >&nbsp;\n        <button\n          type=\"button\"\n          (click)=\"onCancel()\"\n          class=\"btn btn-danger form-control\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n    <br />\n    <a style=\"cursor: pointer;\" routerLink=\"/forgotpassword\"\n      >Forgot password ?</a\n    >\n    <br />\n    <a style=\"cursor: pointer;\" routerLink=\"/register\">Create New Account</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private email: string = '';\n  private password: string = '';\n  loginForm: FormGroup;\n  loading: boolean = false;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService,\n    private toastr: ToastrService,\n    private authService: AuthService) { }\n\n  //Toast Methods\n  showSuccess() {  //FOR Success\n    this.toastr.success('Welcome!!', 'Login Sucessfull!', {\n      timeOut: 3000\n    });\n  }\n\n  showWarning() {  //FOR Warnings\n    this.toastr.warning('Warning', 'Please verify your email first!', {\n      timeOut: 3000\n    });\n  }\n\n  showError() {   // FOR Errors \n    this.toastr.error('Sorry', 'Invalid Credentials!', {\n      timeOut: 3000\n    });\n  }\n\n\n  ngOnInit(): void {\n    if (this.authService.isAuthenticated) {\n      this.router.navigate(['/dashboard']);\n    }\n\n    this.loginForm = new FormGroup({\n      'email': new FormControl(this.email, [Validators.required, Validators.email]),\n      'password': new FormControl(this.password, [Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)])\n    })\n  }\n\n  onSubmit() {\n    this.email = this.loginForm.value.email;\n    this.password = this.loginForm.value.password;\n    this.authenticateUser(this.email, this.password);\n    this.loginForm.reset();\n  }\n\n  authenticateUser(email: string, password: string) {\n    this.loading = true;\n    this.userService.authenticateUser(email, password).subscribe(response => {\n\n      this.loading = false;\n      //If Login issuccessfull goto dashboard\n      if (response.status === 'success') {\n        this.showSuccess();\n        localStorage.setItem('currentUser', response.token);\n        this.router.navigate(['../dashboard'], { relativeTo: this.route })\n      }\n      //Else display errors or warnings\n      else if (response.status === 'error') {\n        this.showError();\n      }\n      else if (response.status === 'warning') {\n        this.showWarning();\n      }\n\n    });;\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n\n  }\n}\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/pnr.svg\"\n      alt=\"Login\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -18%; left: 42%;\"\n    /><br /><br />\n    <h3 style=\"text-align: center; letter-spacing: 0.03cm;\">\n      Check PNR Status\n    </h3>\n    <form [formGroup]=\"pnrForm\" (ngSubmit)=\"onSubmit()\" id=\"pnr\">\n      <br />\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-search fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"number\"\n            id=\"input\"\n            formControlName=\"pnrNo\"\n            name=\"pnrNo\"\n            class=\"form-control\"\n            placeholder=\"Enter PNR Number\"\n          />\n        </div>\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary form-control\"\n          [disabled]=\"!pnrForm.valid\"\n          click=\"onSubmit()\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Check\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"button\" class=\"btn btn-light btn-md\" (click)=\"onClear()\">\n          Clear</button\n        >&nbsp;\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-md\"\n          (click)=\"onBack()\"\n        >\n          Back\n        </button>\n      </div>\n    </form>\n  </div>\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <div *ngIf=\"pnrDetails !== null\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          PNR Details\n\n          <span\n            *ngIf=\"pnrDetails.status === 'Confirmed'\"\n            class=\"badge badge-pill badge-success\"\n            >{{ pnrDetails.status }}</span\n          >\n          <span\n            *ngIf=\"pnrDetails.status === 'Cancelled'\"\n            class=\"badge badge-pill badge-danger\"\n            >{{ pnrDetails.status }}</span\n          >\n        </div>\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\">PNR Number : {{ pnrDetails.pnrNo }}</li>\n          <li class=\"list-group-item\">Train : {{ pnrDetails.train }}</li>\n          <li class=\"list-group-item\">Class : {{ pnrDetails.class }}</li>\n          <li class=\"list-group-item\">\n            DOJ : {{ pnrDetails.doj | date: \"shortDate\" }}\n          </li>\n          <li class=\"list-group-item\">Name : {{ pnrDetails.name }}</li>\n          <li class=\"list-group-item\">Age : {{ pnrDetails.age }}</li>\n          <li class=\"list-group-item\">Gender : {{ pnrDetails.gender }}</li>\n          <li class=\"list-group-item\">Food Option : {{ pnrDetails.food }}</li>\n          <li class=\"list-group-item\">Seat Number : {{ pnrDetails.seatNo }}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { TicketService } from '../../../services/ticket.service';\n\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-pnr',\n  templateUrl: './pnr.component.html',\n  styleUrls: ['./pnr.component.css']\n})\nexport class PnrComponent implements OnInit {\n\n  pnrNo: string = '';\n  pnrForm: FormGroup;\n  pnrDetails = null;\n  loading: boolean = false;\n\n\n  constructor(\n    private router: Router,\n    private toastr: ToastrService,\n    private ticketService: TicketService) { }\n\n  //Toast Methods  \n  showError() {   // FOR Errors \n    this.toastr.error('Sorry', 'Please check PNR Number!', {\n      timeOut: 3000\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.pnrForm = new FormGroup({\n      'pnrNo': new FormControl(this.pnrNo, [Validators.required]),\n    })\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.ticketService.getPnrDetails(this.pnrForm.value.pnrNo).subscribe(response => {\n      this.loading = false;\n      if (response.status === 'success') {\n        this.pnrDetails = response.pnrDetails;\n      } else {\n        this.showError();\n      }\n    })\n    this.pnrForm.reset();\n  }\n\n  onClear() {\n    this.pnrForm.reset();\n    this.pnrDetails = null;\n  }\n\n  onBack() {\n    this.router.navigate(['/dashboard']);\n  }\n}\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/profile.svg\"\n      alt=\"Login\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -18%; left: 42%;\"\n    />\n    <h3 style=\"text-align: center;\"><strong>Your Profile</strong></h3>\n    <div class=\"card\">\n      <div class=\"card-header\">Hello, {{ userDetails.firstname }}</div>\n      <ul class=\"list-group list-group-flush\">\n        <li class=\"list-group-item\">Email ID : {{ userDetails.email }}</li>\n        <li class=\"list-group-item\">Phone No : {{ userDetails.phone }}</li>\n      </ul>\n    </div>\n    <br />\n    <hr />\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\" id=\"update\">\n      <div class=\"form-group\">\n        <label for=\"email\">Update Profile :</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-envelope fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"email\"\n            id=\"newEmail\"\n            formControlName=\"newEmail\"\n            name=\"newEmail\"\n            class=\"form-control\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter New Email\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-phone fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"number\"\n            id=\"newPhone\"\n            formControlName=\"newPhone\"\n            name=\"newPhone\"\n            class=\"form-control\"\n            placeholder=\"Enter New Phone\"\n            minlength=\"10\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success form-control\"\n          [disabled]=\"!updateForm.valid\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Update Details\n        </button>\n      </div>\n    </form>\n    <a\n      class=\"btn btn-primary btn-block\"\n      type=\"button\"\n      routerLink=\"/updatepassword\"\n    >\n      Update Password </a\n    ><br />\n    <button\n      class=\"btn btn-secondary btn-block\"\n      type=\"button\"\n      (click)=\"onBack()\"\n    >\n      Back to Dashboard\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { UserService } from 'src/app/services/user.service';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  userDetails = null;\n  updateForm: FormGroup;\n  loading: boolean = false;\n  newEmail;\n  newPhone;\n\n  constructor(\n    private userService: UserService,\n    private toastr: ToastrService,\n    private router: Router\n  ) { }\n\n\n  //Toast Methods\n  showSuccess() {  //FOR Success\n    this.toastr.success('Success!!', 'Updated Successfully!', {\n      timeOut: 3000\n    });\n  }\n\n  showError() {   // FOR Errors \n    this.toastr.error('OOPS!!', 'Something went wrong...', {\n      timeOut: 3000\n    });\n  }\n\n  ngOnInit() {\n\n    this.userService.getUserDetails().subscribe(response => {\n      //If errors\n      if (response.msg === 'error') {\n        this.showError();\n      } else {\n        //get details of logged in user\n        this.userDetails = response.user;\n      }\n    });\n\n    this.updateForm = new FormGroup({\n      'newEmail': new FormControl(null, Validators.email),\n      'newPhone': new FormControl(null, Validators.pattern(/^[0-9]{10}$/))\n    })\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.userService.updateProfile(this.updateForm.value.newEmail, this.updateForm.value.newPhone).subscribe(response => {\n      this.loading = false;\n      response.status === 'success' ? this.showSuccess() : this.showError();\n    });\n    this.updateForm.reset();\n  }\n\n  onBack() {\n    this.router.navigate(['/dashboard']);\n  }\n\n}\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/resetpwd.svg\"\n      alt=\"Reset Password\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -18%; left: 42%;\"\n    />\n    <br />\n    <h3 style=\"text-align: center; letter-spacing: 0.1cm;\">Change Password</h3>\n    <br />\n    <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\" id=\"resetpwd\">\n      <div class=\"form-group\">\n        <label for=\"password\">New Password</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-lock fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"password\"\n            id=\"password\"\n            formControlName=\"password\"\n            name=\"password\"\n            class=\"form-control\"\n            appShPassword\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"confirmPassword\">Confirm New Password</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-lock fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            formControlName=\"confirmPassword\"\n            name=\"confirmPassword\"\n            class=\"form-control\"\n            appShPassword\n          />\n        </div>\n      </div>\n      <div\n        class=\"error\"\n        *ngIf=\"\n          resetForm.get('confirmPassword').errors &&\n          resetForm.get('confirmPassword').errors.ConfirmPassword\n        \"\n      >\n        Sorry!! Passwords didn't match.\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success form-control\"\n          [disabled]=\"!resetForm.valid\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Change Password\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary form-control\"\n          (click)=\"onLogin()\"\n        >\n          Go to Login Page\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserService } from 'src/app/services/user.service';\nimport { ConfirmPasswordValidator } from '../../shared/confirmPassword-validator';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  resetForm: FormGroup;\n  loading: boolean = false;\n\n  constructor(private route: ActivatedRoute,\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  //Toast Methods\n  showSuccess() {  //FOR Success\n    this.toastr.success('Success', 'Password changed successfully!', {\n      timeOut: 3000\n    });\n  }\n\n  showWarning() {  // FOR Warnings\n    this.toastr.warning('Warning', 'No such user exists!', {\n      timeOut: 3000\n    });\n  }\n\n  showError() {   // FOR Errors \n    this.toastr.error('Sorry', 'Error occured!!', {\n      timeOut: 3000\n    });\n  }\n\n\n  ngOnInit() {\n    this.resetForm = new FormGroup({\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)\n      ]),\n      confirmPassword: new FormControl(null, Validators.required),\n    }, { validators: ConfirmPasswordValidator.MatchPassword }\n    );\n  }\n\n  onSubmit() {\n    this.loading = true;\n    const newPassword = this.resetForm.value.password;\n    let token = 0;\n    this.route.params.subscribe((params: Params) => {\n      token = params['token'];\n    });\n\n    //calling method in user service to call API to change password\n    this.userService.resetPassword(newPassword, token).subscribe(response => {\n      this.loading = false;\n      if (response.status === 'success') {\n        this.showSuccess();\n      } else if (response.status === 'warning') {\n        this.showWarning();\n      } else {\n        this.showError();\n      }\n\n    })\n    this.resetForm.reset();\n\n  }\n\n  onLogin() {\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['../../login'], { relativeTo: this.route });\n  }\n\n}\n","<!-- <div class=\"d-flex container justify-content-center\"> -->\n<div class=\"row justify-content-center\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4 m-2\"\n  >\n    <img\n      src=\"../../assets/images/search.svg\"\n      alt=\"Search\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -18%; left: 38%;\"\n    /><br />\n    <h3 style=\"text-align: center; letter-spacing: 0.1cm;\">Search Trains</h3>\n    <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSubmit()\">\n      <!-- search model -->\n      <div class=\"form-group\">\n        <div class=\"input-group date\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-subway fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"source\"\n            id=\"soure\"\n            placeholder=\"From\"\n            #v\n          />\n        </div>\n      </div>\n\n      <div class=\"d-flex form-group justify-content-center\">\n        <button\n          class=\"btn btn-light border border-light\"\n          (click)=\"x = v.value; v.value = v1.value; v1.value = x\"\n        >\n          <i class=\"fa fa-exchange fa-rotate-90\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"input-group date\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-subway fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"destination\"\n            id=\"destination\"\n            placeholder=\"To\"\n            #v1\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-calendar fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"date\"\n            id=\"doj\"\n            formControlName=\"doj\"\n            name=\"doj\"\n            class=\"form-control\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success w-100 mt-2\"\n          [disabled]=\"!searchForm.valid\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Search\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"button\" class=\"btn btn-light btn-md\" (click)=\"onClear()\">\n          Clear</button\n        >&nbsp;\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-md\"\n          (click)=\"onBack()\"\n        >\n          Back\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.css\"]\n})\nexport class SearchComponent implements OnInit {\n  searchForm: FormGroup;\n  x: any;\n  loading: boolean = false;\n  userDetails = {};\n  constructor(private router: Router, private toastr: ToastrService) { }\n\n  //Toast Methods\n  showError() {   // FOR Errors \n    this.toastr.error('OOPS!!', 'Something went wrong...', {\n      timeOut: 3000\n    });\n  }\n\n  ngOnInit(): void {\n\n    this.searchForm = new FormGroup({\n      source: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(/^[A-Za-z -]+$/)\n      ]),\n      destination: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(/^[A-Za-z -]+$/)\n      ]),\n      doj: new FormControl(null, Validators.required)\n    });\n  }\n\n  onSubmit() {\n    this.loading = true;\n    console.log(this.searchForm);\n  }\n\n  onClear() {\n    this.searchForm.reset();\n  }\n\n  onBack() {\n    this.router.navigate(['/dashboard']);\n  }\n}\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/arrangement.svg\"\n      alt=\"Login\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -18%; left: 42%;\"\n    /><br /><br />\n    <h3 style=\"text-align: center; letter-spacing: 0.03cm;\">\n      Train Seat Availability\n    </h3>\n    <form [formGroup]=\"AvlForm\" (ngSubmit)=\"onSubmit()\" id=\"seat\">\n      <br />\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-braille fa-lg fa-fw\" style=\"font-size: 24px;\"></i>\n            </div>\n          </div>\n          <select\n            type=\"number\"\n            id=\"trainNo\"\n            formControlName=\"trainNo\"\n            name=\"trainNo\"\n            class=\"form-control\"\n          >\n            <option>25973</option>\n            <option>43581</option>\n            <option>96101</option>\n            <option>48967</option>\n            <option>51138</option>\n            <option>60760</option>\n            <option>51952</option>\n            <option>44130</option>\n            <option>49922</option>\n            <option>96170</option>\n          </select>\n        </div>\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary form-control\"\n          [disabled]=\"!AvlForm.valid\"\n          click=\"onSubmit()\"\n        >\n          Seat Details\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"button\" class=\"btn btn-light btn-md\" (click)=\"onClear()\">\n          Clear</button\n        >&nbsp;\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-md\"\n          (click)=\"onBack()\"\n        >\n          Back\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n<br />\n<hr *ngIf=\"this.trainSeat\" />\n<div>\n  <div class=\"table-responsive\" *ngFor=\"let data of this.trainSeat\">\n    <span class=\"badge badge-pill badge-success\">{{ data.number }}</span\n    >&nbsp;&nbsp;<span class=\"badge badge-pill badge-primary\">{{\n      data.name\n    }}</span>\n  </div>\n</div>\n<br />\n<div class=\"table-responsive\" *ngIf=\"this.trainSeat\">\n  <table class=\"table table-striped\">\n    <thead>\n      <tr *ngIf=\"this.trainSeat\">\n        <th scope=\"col\">Class Type</th>\n        <th scope=\"col\">Available Seat</th>\n      </tr>\n    </thead>\n    <tbody *ngFor=\"let data of this.trainSeat\">\n      <tr>\n        <td>First&nbsp;&nbsp;Ac</td>\n        <td>{{ data.classes[0].firstAc }}</td>\n      </tr>\n      <tr>\n        <td>Executive&nbsp;&nbsp;Anubhuti</td>\n        <td>{{ data.classes[0].executiveAnubhuti }}</td>\n      </tr>\n      <tr>\n        <td>AcExecutive&nbsp;&nbsp;Class</td>\n        <td>{{ data.classes[0].acExecutiveClass }}</td>\n      </tr>\n      <tr>\n        <td>Second&nbsp;&nbsp;Ac</td>\n        <td>{{ data.classes[0].secondAc }}</td>\n      </tr>\n      <tr>\n        <td>First&nbsp;&nbsp;Class</td>\n        <td>{{ data.classes[0].firstClass }}</td>\n      </tr>\n      <tr>\n        <td>Third&nbsp;&nbsp;Ac</td>\n        <td>{{ data.classes[0].thirdAc }}</td>\n      </tr>\n      <tr>\n        <td>ThirdAc &nbsp;&nbsp;Economy</td>\n        <td>{{ data.classes[0].thirdAcEconomy }}</td>\n      </tr>\n      <tr>\n        <td>AcChair&nbsp;&nbsp;Class</td>\n        <td>{{ data.classes[0].acChairClass }}</td>\n      </tr>\n      <tr>\n        <td>Sleeper</td>\n        <td>{{ data.classes[0].sleeper }}</td>\n      </tr>\n      <tr>\n        <td>Second&nbsp;&nbsp;Seating</td>\n        <td>{{ data.classes[0].secondSeating }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-seat-avl',\n  templateUrl: './seat-avl.component.html',\n  styleUrls: ['./seat-avl.component.css']\n})\nexport class SeatAvlComponent implements OnInit {\n  trainNo: string = '';\n  AvlForm: FormGroup;\n  loading: boolean = false;\n  trainSeat: string;\n  Data: any;\n  data2: any;\n\n  constructor(\n    private router: Router) { }\n\n\n  ngOnInit(): void {\n    this.AvlForm = new FormGroup({\n      'trainNo': new FormControl(null, [Validators.required]),\n    })\n  }\n  onSubmit() {\n    let x = (<HTMLInputElement>document.getElementById(\"trainNo\")).value;\n    this.Data = require('src/assets/JsonDataFiles/availability.json');\n    this.trainSeat = this.Data.filter(d => d.number === x);\n    // console.log(this.trainSeat)\n  }\n\n  onClear() {\n    this.AvlForm.reset();\n    this.trainSeat = null;\n  }\n\n  onBack() {\n    this.router.navigate(['/dashboard']);\n  }\n\n}\n\n\n\n\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <h5 *ngIf=\"!isTickets\" style=\"text-align: center;\">\n      Sorry!! No Booked Tickets Found...\n    </h5>\n    <h3\n      *ngIf=\"tickets.length > 0\"\n      style=\"text-align: center; letter-spacing: 0.1cm;\"\n    >\n      Booked Tickets&nbsp;<i class=\"fa fa-check-circle\"></i>\n    </h3>\n    <br />\n    <div *ngFor=\"let ticket of tickets\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <span class=\"badge badge-success\">Booked</span>&nbsp;\n          <span class=\"badge badge-primary\"\n            >Total Passengers : {{ noOfPassengers }}</span\n          >\n        </div>\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\">Ticket ID : {{ ticket.ticketId }}</li>\n          <li class=\"list-group-item\">\n            {{ ticket.source }} ==> {{ ticket.destination }}\n          </li>\n          <li class=\"list-group-item\">\n            DOJ : {{ ticket.dateOfJourney | date: \"shortDate\" }}\n          </li>\n          <li class=\"list-group-item\">Train : {{ ticket.train }}</li>\n          <li class=\"list-group-item\">Class : {{ ticket.class }}</li>\n          <li class=\"list-group-item\">Fare : Rs {{ ticket.fare }}/-</li>\n          <li class=\"list-group-item\">\n            <button\n              type=\"button\"\n              class=\"btn btn-danger btn-block\"\n              data-toggle=\"modal\"\n              data-target=\"#exampleModalCenter\"\n            >\n              Cancel Ticket\n            </button>\n          </li>\n        </ul>\n      </div>\n      <br />\n    </div>\n    <div class=\"form-group\">\n      <button type=\"button\" class=\"btn btn-secondary btn-md\" (click)=\"onBack()\">\n        Back\n      </button>\n    </div>\n  </div>\n  <!-- Modal -->\n  <div\n    class=\"modal fade\"\n    id=\"exampleModalCenter\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">\n            Please enter the Ticket ID on the ticket\n          </h5>\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <form\n            [formGroup]=\"cancelForm\"\n            (ngSubmit)=\"onCancelTicket()\"\n            id=\"cancelticket\"\n          >\n            <div class=\"form-group\">\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <div class=\"input-group-text\" id=\"btnGroupAddon\">\n                    <i class=\"fa fa-info fa-lg fa-fw\"></i>\n                  </div>\n                </div>\n                <input\n                  type=\"number\"\n                  id=\"ticketId\"\n                  formControlName=\"ticketId\"\n                  name=\"ticketId\"\n                  class=\"form-control\"\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-dismiss=\"modal\"\n            (click)=\"onCancel()\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            (click)=\"onCancelTicket()\"\n            [disabled]=\"!cancelForm.valid\"\n          >\n            <span\n              *ngIf=\"loading\"\n              class=\"spinner-border spinner-border-sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            ></span>\n            Confirm Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { TicketService } from '../../../services/ticket.service';\n\n@Component({\n  selector: 'app-showtickets',\n  templateUrl: './showtickets.component.html',\n  styleUrls: ['./showtickets.component.css']\n})\nexport class ShowticketsComponent implements OnInit {\n\n  tickets = [];\n  noOfPassengers: number = 0;\n  passengersArray = [];\n  loading: boolean = false;\n  isTickets: boolean = false;\n  ticketId: string = ''\n  cancelForm: FormGroup;\n\n  constructor(\n    private ticketService: TicketService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  //Toast Methods\n  showSuccess() {  //FOR Success\n    this.toastr.success('Success', 'Your ticket has been cancelled!', {\n      timeOut: 3000\n    });\n  }\n\n  showError() {   // FOR Errors \n    this.toastr.error('Sorry', 'Error occured!!', {\n      timeOut: 3000\n    });\n  }\n\n\n  ngOnInit() {\n    this.cancelForm = new FormGroup({\n      'ticketId': new FormControl(this.ticketId, [Validators.required])\n    })\n\n    this.ticketService.getTickets().subscribe(response => {\n      if (response.tickets) {\n        this.isTickets = true;\n        this.tickets = response.tickets;\n        this.passengersArray = this.tickets.map(ticket => ticket.passengerDetails);\n        this.noOfPassengers = this.passengersArray[0].length;\n      }\n    })\n  }\n\n\n  onCancelTicket() {\n    this.loading = true;\n    this.ticketId = this.cancelForm.value.ticketId;\n    this.ticketService.cancelTicket(this.ticketId).subscribe(response => {\n      this.loading = false;\n      if (response.status === 'success') {\n        this.showSuccess();\n      } else {\n        this.showError();\n      }\n    });\n    this.cancelForm.reset();\n  }\n\n  onCancel() {\n    this.router.navigate(['../show-tickets']);\n  }\n\n  onBack() {\n    this.router.navigate(['/dashboard']);\n  }\n\n}\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/signup.svg\"\n      alt=\"Signup\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -15%; left: 42%;\"\n    />\n    <h3 style=\"text-align: center; letter-spacing: 0.1cm;\">Sign Up</h3>\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\" id=\"signup\">\n      <div class=\"form-group form-row\">\n        <div class=\"input-group col\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-user-circle fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"firstName\"\n            placeholder=\"Firstname\"\n            id=\"firstName\"\n            formControlName=\"firstName\"\n            name=\"firstName\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"input-group col\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-user-circle fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"lastName\"\n            placeholder=\"Lastname\"\n            id=\"lastName\"\n            formControlName=\"lastName\"\n            name=\"lastName\"\n            class=\"form-control\"\n          />\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-envelope fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            placeholder=\"Email Address\"\n            type=\"email\"\n            id=\"email\"\n            formControlName=\"email\"\n            name=\"email\"\n            class=\"form-control\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-lock fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            placeholder=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            formControlName=\"password\"\n            name=\"password\"\n            class=\"form-control\"\n            appShPassword\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-lock fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            placeholder=\"Confirm Password\"\n            type=\"password\"\n            id=\"confirmPassword\"\n            formControlName=\"confirmPassword\"\n            name=\"confirmPassword\"\n            class=\"form-control\"\n            appShPassword\n          />\n        </div>\n\n        <div\n          class=\"error\"\n          *ngIf=\"\n            signUpForm.get('confirmPassword').errors &&\n            signUpForm.get('confirmPassword').errors.ConfirmPassword\n          \"\n        >\n          Sorry!! Passwords didn't match.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"dob\">Date Of Birth</label>\n        <div class=\"input-group date\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-calendar fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"date\"\n            id=\"dob\"\n            formControlName=\"dob\"\n            name=\"dob\"\n            value=\"12-02-2000\"\n            class=\"form-control\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"gender\">Gender</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-male fa-fw\"></i>\n            </div>\n          </div>\n          <select\n            type=\"text\"\n            id=\"gender\"\n            formControlName=\"gender\"\n            name=\"gender\"\n            class=\"form-control\"\n          >\n            <option>Male</option>\n            <option>Female</option>\n            <option>Other</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-phone fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            placeholder=\"eg : +91 0123456789\"\n            type=\"number\"\n            id=\"phone\"\n            formControlName=\"phone\"\n            name=\"phone\"\n            class=\"form-control\"\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success form-control\"\n          [disabled]=\"!signUpForm.valid\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Create Account</button\n        >&nbsp;\n        <button\n          type=\"button\"\n          (click)=\"onCancel()\"\n          class=\"btn btn-danger form-control\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n    <br />&nbsp;\n    <a style=\"cursor: pointer;\" routerLink=\"/login\"\n      >Already have account ? Login</a\n    >\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { ConfirmPasswordValidator } from \"../../shared/confirmPassword-validator\";\nimport { User } from \"../../../models/user.model\";\nimport { UserService } from \"../../../services/user.service\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit {\n  signUpForm: FormGroup;\n  loading: boolean = false;\n\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService, private toastr: ToastrService) { }\n\n  //Toast Methods\n  showSuccess() {  //FOR Success\n    this.toastr.success('Successfully Registered!', 'Kindly Login!', {\n      timeOut: 3000\n    });\n  }\n\n  showWarning() {  // FOR Warnings\n    this.toastr.warning('Warning', 'User already exists!', {\n      timeOut: 3000\n    });\n  }\n\n  showError() {   // FOR Errors \n    this.toastr.error('Sorry', 'Error occured in registration!', {\n      timeOut: 3000\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.signUpForm = new FormGroup(\n      {\n        firstName: new FormControl(null, Validators.required),\n        lastName: new FormControl(null, Validators.required),\n        email: new FormControl(null, [Validators.required, Validators.email]),\n        password: new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)\n        ]),\n        confirmPassword: new FormControl(null, Validators.required),\n        dob: new FormControl(null, Validators.required),\n        gender: new FormControl(null, Validators.required),\n        phone: new FormControl(null, [Validators.required, Validators.pattern(/^[0-9]{10}$/)])\n      },\n      { validators: ConfirmPasswordValidator.MatchPassword }\n    );\n  }\n  //calls a service to register a new user\n  saveData(newUser) {\n    this.loading = true;\n    this.userService.registerUsers(newUser).subscribe(response => {\n      this.loading = false;\n      if (response.status === 'success') {\n        this.router.navigate([\"/login\"]);\n        this.showSuccess();\n      }\n      else if (response.status === 'warning') {\n        this.showWarning();\n      }\n      else {\n        this.showError();\n      }\n    });\n  }\n\n  onSubmit() {\n    console.log(\"form submitted...\");\n    //saving user data\n    const newUser = new User(\n      this.signUpForm.value.firstName,\n      this.signUpForm.value.lastName,\n      this.signUpForm.value.email,\n      this.signUpForm.value.password,\n      this.signUpForm.value.dob,\n      this.signUpForm.value.gender,\n      this.signUpForm.value.phone\n    );\n    this.saveData(newUser);\n    this.signUpForm.reset();\n  }\n\n  onCancel() {\n    this.router.navigate([\"../\"], { relativeTo: this.route });\n  }\n\n}\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/calender.svg\"\n      alt=\"Login\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -18%; left: 42%;\"\n    /><br /><br />\n    <h3 style=\"text-align: center; letter-spacing: 0.03cm;\">\n      Train Timechart\n    </h3>\n    <form [formGroup]=\"scheduleForm\" (ngSubmit)=\"onSubmit()\" id=\"schedule\">\n      <br />\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-calendar fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <select\n            type=\"number\"\n            id=\"trainNo\"\n            formControlName=\"trainNo\"\n            name=\"trainNo\"\n            class=\"form-control\"\n          >\n            <option>14311</option>\n            <option>12129</option>\n            <option>19034</option>\n            <option>22953</option>\n            <option>59163</option>\n          </select>\n        </div>\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary form-control\"\n          [disabled]=\"!scheduleForm.valid\"\n          click=\"onSubmit()\"\n        >\n          Get Schedule\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"button\" class=\"btn btn-light btn-md\" (click)=\"onClear()\">\n          Clear</button\n        >&nbsp;\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-md\"\n          (click)=\"onBack()\"\n        >\n          Back\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n<div>\n  <hr *ngIf=\"this.trainSchedule\" />\n  <div>\n    <div class=\"table-responsive\" *ngIf=\"this.FirstData\">\n      <span class=\"badge badge-pill badge-success\">{{\n        this.FirstData[\"number\"]\n      }}</span\n      >&nbsp;&nbsp;<span class=\"badge badge-pill badge-primary\">{{\n        this.FirstData[\"name\"]\n      }}</span>\n    </div>\n    <br />\n    <div class=\"table-responsive\" *ngIf=\"this.trainSchedule\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr *ngIf=\"this.trainSchedule\">\n            <th scope=\"col\">Stations</th>\n            <th scope=\"col\">Arrival Time</th>\n            <th scope=\"col\">Departure Time</th>\n            <th scope=\"col\">Platform_No</th>\n          </tr>\n        </thead>\n        <tbody *ngFor=\"let data of this.trainSchedule\">\n          <tr>\n            <td>{{ data.station }}</td>\n            <td>{{ data.arrivalTime }}</td>\n            <td>{{ data.departureTime }}</td>\n            <td>{{ data.platform }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-train-schedule',\n  templateUrl: './train-schedule.component.html',\n  styleUrls: ['./train-schedule.component.css']\n})\nexport class TrainScheduleComponent implements OnInit {\n  trainNo: string = '';\n  scheduleForm: FormGroup;\n  trainSchedule: string;\n  Data: any;\n  FirstData: string;\n\n  constructor(\n    private router: Router) { }\n\n\n  ngOnInit(): void {\n    this.scheduleForm = new FormGroup({\n      'trainNo': new FormControl(null, [Validators.required]),\n    })\n  }\n  onSubmit() {\n    let x = (<HTMLInputElement>document.getElementById(\"trainNo\")).value;\n    this.Data = require('src/assets/JsonDataFiles/schedule.json');\n    this.trainSchedule = this.Data.filter(d => d.number === x);\n    this.FirstData = this.trainSchedule[0];\n  }\n\n  onClear() {\n    this.scheduleForm.reset();\n    this.trainSchedule = null;\n    this.FirstData = null;\n  }\n\n  onBack() {\n    this.router.navigate(['/dashboard']);\n  }\n\n}\n","<div class=\"row\">\n  <div\n    class=\"col-xs-4 offset-xs-4 col-sm-4 offset-sm-4 col-md-4 offset-md-4 col-lg-4 offset-lg-4\"\n  >\n    <img\n      src=\"../../assets/images/updatepwd.svg\"\n      alt=\"Update Password\"\n      class=\"img-responsive\"\n      style=\"width: 70px; position: absolute; top: -18%; left: 42%;\"\n    />\n    <br />\n    <h3 style=\"text-align: center; letter-spacing: 0.1cm;\">Update Password</h3>\n    <br />\n    <form [formGroup]=\"updatePwdForm\" (ngSubmit)=\"onSubmit()\" id=\"updatePwd\">\n      <div class=\"form-group\">\n        <label for=\"oldPassword\">Old Password</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-lock fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"password\"\n            id=\"oldPassword\"\n            formControlName=\"oldPassword\"\n            name=\"oldPassword\"\n            class=\"form-control\"\n            appShPassword\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newPassword\">New Password</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-lock fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"password\"\n            id=\"newPassword\"\n            formControlName=\"newPassword\"\n            name=\"newPassword\"\n            class=\"form-control\"\n            appShPassword\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"confirmPassword\">Confirm New Password</label>\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\" id=\"btnGroupAddon\">\n              <i class=\"fa fa-lock fa-lg fa-fw\"></i>\n            </div>\n          </div>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            formControlName=\"confirmPassword\"\n            name=\"confirmPassword\"\n            class=\"form-control\"\n            appShPassword\n          />\n        </div>\n      </div>\n      <div\n        class=\"error\"\n        *ngIf=\"\n          updatePwdForm.get('confirmPassword').errors &&\n          updatePwdForm.get('confirmPassword').errors.ConfirmPassword\n        \"\n      >\n        Sorry!! Passwords didn't match.\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success form-control\"\n          [disabled]=\"!updatePwdForm.valid\"\n        >\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          Update Password\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary form-control\"\n          (click)=\"onBack()\"\n        >\n          Back to profile\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserService } from 'src/app/services/user.service';\nimport { ConfirmPasswordValidator } from '../../shared/confirmPassword-validator';\n\n\n@Component({\n  selector: 'app-updatepassword',\n  templateUrl: './updatepassword.component.html',\n  styleUrls: ['./updatepassword.component.css']\n})\nexport class UpdatepasswordComponent implements OnInit {\n\n  updatePwdForm: FormGroup;\n  loading: boolean = false;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  //Toast Methods\n  showSuccess() {  //FOR Success\n    this.toastr.success('Success', 'Password updated successfully!', {\n      timeOut: 3000\n    });\n  }\n\n  showWarning() {  // FOR Warnings\n    this.toastr.warning('Warning', 'Entered old password is incorrect!', {\n      timeOut: 3000\n    });\n  }\n\n  showError() {   // FOR Errors \n    this.toastr.error('Sorry', 'Error occured!!', {\n      timeOut: 3000\n    });\n  }\n\n\n  ngOnInit() {\n    this.updatePwdForm = new FormGroup({\n      oldPassword: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)\n      ]),\n      newPassword: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)\n      ]),\n      confirmPassword: new FormControl(null, Validators.required),\n    }, { validators: ConfirmPasswordValidator.MatchPassword2 }\n    );\n  }\n\n  onSubmit() {\n    this.loading = true;\n    const oldPassword = this.updatePwdForm.value.oldPassword;\n    const newPassword = this.updatePwdForm.value.newPassword;\n\n    //calling method in user service to call API to update password\n    this.userService.updatePassword(oldPassword, newPassword).subscribe(response => {\n      this.loading = false;\n      if (response.status === 'success') {\n        this.showSuccess();\n      } else if (response.status === 'warning') {\n        this.showWarning();\n      } else {\n        this.showError();\n      }\n\n    })\n    this.updatePwdForm.reset();\n  }\n\n  onBack() {\n    this.router.navigate(['/dashboard']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n    <div class=\"jumbotron\">\n      <h1 class=\"display-4\" style=\"text-align: center;\">\n        Welcome, to Railsafar!\n      </h1>\n      <p class=\"lead\" style=\"text-align: center;\">In your service always.</p>\n      <button class=\"btn btn-primary btn-lg\" type=\"button\" (click)=\"onLogin()\">\n        Login</button\n      >&nbsp;\n      <button\n        class=\"btn btn-success btn-lg\"\n        type=\"button\"\n        (click)=\"onRegister()\"\n      >\n        Register\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n\n  constructor(private route : ActivatedRoute, private router : Router) { }\n\n  onLogin(){\n    this.router.navigate(['/login'],{relativeTo:this.route});\n  }\n\n  onRegister(){\n    this.router.navigate(['/register'],{relativeTo:this.route});\n  }\n\n  ngOnInit() {\n  }\n\n\n}\n","import { AbstractControl } from '@angular/forms';\nexport class ConfirmPasswordValidator {\n  static MatchPassword(control: AbstractControl) {\n    let password = control.get('password').value;\n    let confirmPassword = control.get('confirmPassword').value;\n    if (password != confirmPassword) {\n      control.get('confirmPassword').setErrors({ ConfirmPassword: true });\n    }\n    else {\n      return null;\n    }\n  }\n\n  static MatchPassword2(control: AbstractControl) {\n    let password = control.get('newPassword').value;\n    let confirmPassword = control.get('confirmPassword').value;\n    if (password != confirmPassword) {\n      control.get('confirmPassword').setErrors({ ConfirmPassword: true });\n    }\n    else {\n      return null;\n    }\n  }\n}","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appShPassword]'\n})\nexport class ShPasswordDirective \n{\n  private shown = false;\n  constructor(private el: ElementRef) \n  {\n    this.setup();\n  }\n  \n  change(span: HTMLElement) \n  {\n    this.shown = !this.shown;\n    if (this.shown) {\n      this.el.nativeElement.setAttribute('type', 'text');\n      span.innerHTML = '<i  style=\"position:absolute; right:8px;top:8px;color:grey;\" class=\"fa fa-eye-slash\"></i>';\n    } else {\n      this.el.nativeElement.setAttribute('type', 'password');\n      span.innerHTML = '<i  style=\"position:absolute; right:8px;top:8px;color:grey;\" class=\"fa fa-eye\"></i>';\n    }\n  }\n  \n  setup() \n  {\n    const parent = this.el.nativeElement.parentNode;\n    const span = document.createElement('span');\n    span.innerHTML = '<i style=\"position:absolute; right:8px;top:8px;color:grey;\" class=\"fa fa-eye\"></i>';\n    span.addEventListener('click', (event) => {\n      this.change(span);\n    });\n    parent.appendChild(span);\n  }\n}\n","export class User {\n    constructor(public firstname : string = null,\n    public lastname : string= null,\n    public email : string = null,\n    public password : string = null,\n    public dob : string =null,\n    public gender : string = null,\n    public phone : number = 0){}\n\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(public auth: AuthService, public router: Router) { }\n\n    //canActivate is guard\n    canActivate(): boolean {\n        if (!this.auth.isAuthenticated()) {\n            this.router.navigate(['login']);\n            return false;\n        }\n        return true;\n    }\n}","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n@Injectable()\nexport class AuthService {\n    constructor(public jwtHelper: JwtHelperService) { }\n\n    //Method to check whether user is logged in or NOT\n    public isAuthenticated(): boolean {\n        const token = localStorage.getItem('currentUser');\n        // Check whether the token is expired and return\n        // true or false\n        if (this.jwtHelper.isTokenExpired(token)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    //Returns JWT Token stored in localstorage\n    public getToken(): string {\n        return localStorage.getItem('currentUser');\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class TicketService {\n\n\n\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    //Book Ticket\n    bookTicket(bookingDetails): Observable<any> {\n        const headers = new HttpHeaders();\n        headers.append(\"Content-Type\", \"application/json\");\n        return this.http\n            .post(\"api/ticket/bookticket\", bookingDetails, { headers: headers })\n            .pipe(map((response: any) => response));\n    }\n\n    //Get Tickets of logged in user\n    getTickets(): Observable<any> {\n        return this.http\n            .get(\"api/ticket/gettickets\")\n            .pipe(map((response: any) => response));\n\n    }\n\n    //Get PNR Details of logged in user\n    getPnrDetails(pnrNo): Observable<any> {\n        return this.http\n            .get(`api/ticket/getPnrDetails/${pnrNo}`)\n            .pipe(map((response: any) => response));\n    }\n\n    //Cancel Ticket\n    cancelTicket(ticketId): Observable<any> {\n        return this.http\n            .delete(`api/ticket/cancelticket/${ticketId}`)\n            .pipe(map((response: any) => response));\n    }\n\n\n}\n\n","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    constructor(public authService: AuthService) { }\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        request = request.clone({\n            setHeaders: {\n                Authorization: `Bearer ${this.authService.getToken()}`\n            }\n        });\n        return next.handle(request);\n    }\n}","import { Observable } from \"rxjs\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\n\nimport { User } from \"../models/user.model\";\n\n\n@Injectable()\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  //Register a new user\n  registerUsers(newUser: User): Observable<any> {\n    const headers = new HttpHeaders();\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http\n      .post(\"api/user/register\", newUser, { headers: headers })\n      .pipe(map((response: any) => response));\n  }\n\n  //Authenticate a user\n  authenticateUser(email: string, password: string): Observable<any> {\n    const userDetails = {\n      email,\n      password\n    }\n    const headers = new HttpHeaders();\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.post(\"api/user/login\", userDetails, { headers: headers })\n      .pipe(map((response: any) => response));\n  }\n\n  //Update Profile\n  updateProfile(newEmail, newPhone): Observable<any> {\n    const updationDetails = {\n      newEmail,\n      newPhone\n    }\n    const headers = new HttpHeaders();\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.post(\"api/user/updateProfile\", updationDetails, { headers: headers })\n      .pipe(map((response: any) => response));\n  }\n\n  //Send Email containing link to reset password\n  sendEmail(email: string): Observable<any> {\n    const userEmail = { email };\n    const headers = new HttpHeaders();\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.post(\"api/user/sendemail\", userEmail, { headers: headers })\n      .pipe(map((response: any) => response));\n  }\n\n  //Reset User's Password\n  resetPassword(newPassword: string, id: any): Observable<any> {\n    const password = { newPassword }\n    const headers = new HttpHeaders();\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.post(`api/user/resetpassword/${id}`, password, { headers: headers })\n      .pipe(map((response: any) => response));\n  }\n\n  //Update User's Password\n  updatePassword(oldPassword: string, newPassword: string): Observable<any> {\n    const passwords = { oldPassword, newPassword }\n    const headers = new HttpHeaders();\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.post(`api/user/updatePassword`, passwords, { headers: headers })\n      .pipe(map((response: any) => response));\n  }\n\n\n  //Get Loggedin user details\n  getUserDetails(): Observable<any> {\n    return this.http.get('api/user/details')\n      .pipe(map((response: any) => response));\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}